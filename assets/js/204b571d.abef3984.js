"use strict";(self.webpackChunkdeveloper_playcanvas_com=self.webpackChunkdeveloper_playcanvas_com||[]).push([[9041],{43526:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var n=t(85893),i=t(11151);const s={title:"Camera",sidebar_position:5},a=void 0,c={id:"user-manual/packs/components/camera",title:"Camera",description:"The Camera component enables an entity to render a scene from a certain viewpoint.",source:"@site/docs/user-manual/packs/components/camera.md",sourceDirName:"user-manual/packs/components",slug:"/user-manual/packs/components/camera",permalink:"/developer.playcanvas.com/user-manual/packs/components/camera",draft:!1,unlisted:!1,editUrl:"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/user-manual/packs/components/camera.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Camera",sidebar_position:5},sidebar:"userManualSidebar",previous:{title:"Button",permalink:"/developer.playcanvas.com/user-manual/packs/components/button"},next:{title:"Collision",permalink:"/developer.playcanvas.com/user-manual/packs/components/collision"}},o={},l=[{value:"Properties",id:"properties",level:2},{value:"Scripting Interface",id:"scripting-interface",level:2}];function d(e){const r={a:"a",h2:"h2",img:"img",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.p,{children:"The Camera component enables an entity to render a scene from a certain viewpoint."}),"\n",(0,n.jsx)(r.p,{children:"The Camera component can be enabled or disabled using the toggle in the top right of the component panel. If enabled, the camera will render the scene every frame."}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{src:"/images/user-manual/scenes/components/component-camera.png",alt:"Camera component"})}),"\n",(0,n.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Property"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Clear Buffers"}),(0,n.jsxs)(r.td,{children:["Controls how the camera's render target is cleared before rendering each frame. The camera maintains two types of buffer: the color buffer which stores the visible image and a depth buffer that stores information about the distance of a rendered pixel in relation to the position of the camera. The buffers can be cleared independently: ",(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"Color: If selected, the camera will explicitly clear its render target to the chosen clear color before rendering the scene."}),(0,n.jsx)("li",{children:"Depth: If selected, the camera will explicitly clear the depth buffer of its render target before rendering the scene."})]})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Clear Color"}),(0,n.jsx)(r.td,{children:"The color used to clear the camera's render target.  This property is only displayed if 'Clear Color Buffer' is selected."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Projection"}),(0,n.jsxs)(r.td,{children:["The projection type of the camera. Options are: ",(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"Perspective"}),(0,n.jsx)("li",{children:"Orthographic"})]})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Frustum Culling"}),(0,n.jsx)(r.td,{children:"If selected, the camera will only render mesh instances whose axis-aligned bounding boxes intersect with the camera's view frustum. Otherwise, the entire scene will be rendered regardless of visibility."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Field of View"}),(0,n.jsx)(r.td,{children:"The angle between top and bottom clip planes of a perspective camera. This property is only displayed if 'Projection' is set to 'Perspective'."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Ortho Height"}),(0,n.jsx)(r.td,{children:"The distance in world units between the top and bottom clip planes of an orthographic camera. This property is only displayed if 'Projection' is set to 'Orthographic'."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Near Clip"}),(0,n.jsx)(r.td,{children:"The distance in camera space from the camera's eye point to the near clip plane."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Far Clip"}),(0,n.jsx)(r.td,{children:"The distance in camera space from the camera's eye point to the far clip plane."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Priority"}),(0,n.jsx)(r.td,{children:"A number that defines the order in which camera views are rendered by the engine. Smaller numbers are rendered first."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Viewport"}),(0,n.jsxs)(r.td,{children:["A rectangle that specifies the viewport onto the camera's attached render target. This allows you to implement features like split-screen or picture-in-picture. It is defined by normalized coordinates (0 to 1) in the following format: ",(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"x: The lower left x coordinate"}),(0,n.jsx)("li",{children:"y: The lower left y coordinate"}),(0,n.jsx)("li",{children:"w: The width of the rectangle"}),(0,n.jsx)("li",{children:"h: The height of the rectangle"})]})]})]})]})]}),"\n",(0,n.jsx)(r.h2,{id:"scripting-interface",children:"Scripting Interface"}),"\n",(0,n.jsxs)(r.p,{children:["You can control a Camera component's properties using a ",(0,n.jsx)(r.a,{href:"/user-manual/packs/components/script",children:"script component"}),". The Camera component's scripting interface is ",(0,n.jsx)(r.a,{href:"/api/pc.CameraComponent.html",children:"here"}),"."]})]})}function h(e={}){const{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},11151:(e,r,t)=>{t.d(r,{Z:()=>c,a:()=>a});var n=t(67294);const i={},s=n.createContext(i);function a(e){const r=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);