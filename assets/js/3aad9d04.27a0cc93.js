"use strict";(self.webpackChunkdeveloper_playcanvas_com=self.webpackChunkdeveloper_playcanvas_com||[]).push([[183],{12184:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var a=t(74848),n=t(28453);const r={title:"Shader"},i=void 0,o={id:"user-manual/assets/types/shader",title:"Shader",description:"A shader asset contains GLSL code. You can create a new Shader asset by clicking New Shader in the Asset Panel in the Editor or by uploading a file with an extension of `.vert`, `.frag` or `.glsl`.",source:"@site/docs/user-manual/assets/types/shader.md",sourceDirName:"user-manual/assets/types",slug:"/user-manual/assets/types/shader",permalink:"/user-manual/assets/types/shader",draft:!1,unlisted:!1,editUrl:"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/user-manual/assets/types/shader.md",tags:[],version:"current",frontMatter:{title:"Shader"},sidebar:"userManualSidebar",previous:{title:"Render",permalink:"/user-manual/assets/types/render"},next:{title:"Sprite",permalink:"/user-manual/assets/types/sprite"}},c={},d=[];function l(e){const s={code:"code",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(s.p,{children:["A shader asset contains GLSL code. You can create a new Shader asset by clicking New Shader in the Asset Panel in the Editor or by uploading a file with an extension of ",(0,a.jsx)(s.code,{children:".vert"}),", ",(0,a.jsx)(s.code,{children:".frag"})," or ",(0,a.jsx)(s.code,{children:".glsl"}),"."]}),"\n",(0,a.jsx)(s.p,{children:"To edit a Shader asset, right click on it in the Editor and select Edit. Here's an example on using Shader assets to create a custom material."}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-javascript",children:"const vertexShader = this.app.assets.find('my_vertex_shader');\nconst fragmentShader = this.app.assets.find('my_fragment_shader');\nconst shaderDefinition = {\n    attributes: {\n        aPosition: pc.SEMANTIC_POSITION,\n        aUv0: pc.SEMANTIC_TEXCOORD0\n    },\n    vshader: vertexShader.resource\n    fshader: fragmentShader.resource\n};\n\nconst shader = new pc.Shader(this.app.graphicsDevice, shaderDefinition);\nconst material = new pc.Material();\nmaterial.setShader(shader);\n"})})]})}function p(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>o});var a=t(96540);const n={},r=a.createContext(n);function i(e){const s=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(r.Provider,{value:s},e.children)}}}]);